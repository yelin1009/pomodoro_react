{"ast":null,"code":"var _jsxFileName = \"/Users/yelinlee/Documents/React/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport Break from \"./Break\";\nimport Focus from \"./Focus\";\nimport TimeLeft from \"./TimeLeft\";\n\nfunction Pomodoro() {\n  const [focusLength, setFocusLength] = useState(1500);\n  const [breakLength, setBreakLength] = useState(300); // Timer starts out paused\n\n  const [isTimerRunning, setIsTimerRunning] = useState(false); //Focus Length Decrementation / Incrementation\n\n  const decrementFocusLengthByOneMinute = () => {\n    const newFocusLength = focusLength - 300;\n\n    if (newFocusLength < 300) {\n      setFocusLength(300);\n    } else {\n      setFocusLength(newFocusLength);\n    }\n  };\n\n  const incrementFocusLengthByOne = () => {\n    setFocusLength(focusLength + 300);\n  }; // Break Length Decrementation / Incrementation\n\n\n  const decrementBreakLengthByOne = () => {\n    const newBreakLength = breakLength - 60;\n\n    if (newBreakLength < 0) {\n      setBreakLength(0);\n    } else {\n      setBreakLength(newBreakLength);\n    }\n  };\n\n  const incrementBreakLengthByOne = () => {\n    setBreakLength(breakLength + 60);\n  };\n\n  useInterval(() => {// ToDo: Implement what should happen when the timer is running\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Focus, {\n    focusLength: focusLength,\n    decrementFocusLengthByOneMinute: decrementFocusLengthByOneMinute,\n    incrementFocusLengthByOne: incrementFocusLengthByOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Break, {\n    breakLength: breakLength,\n    decrementBreakLengthByOne: decrementBreakLengthByOne,\n    incrementBreakLengthByOne: incrementBreakLengthByOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    title: \"Stop the session\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(TimeLeft, {\n    timeleft: focusLength,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/yelinlee/Documents/React/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","Break","Focus","TimeLeft","Pomodoro","focusLength","setFocusLength","breakLength","setBreakLength","isTimerRunning","setIsTimerRunning","decrementFocusLengthByOneMinute","newFocusLength","incrementFocusLengthByOne","decrementBreakLengthByOne","newBreakLength","incrementBreakLengthByOne","playPause","prevState","oi"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,GAAD,CAA9C,CAFkB,CAGlB;;AACA,QAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,KAAD,CAApD,CAJkB,CAMlB;;AAEA,QAAMa,+BAA+B,GAAG,MAAM;AAC5C,UAAMC,cAAc,GAAGP,WAAW,GAAG,GAArC;;AAEA,QAAIO,cAAc,GAAG,GAArB,EAA0B;AACxBN,MAAAA,cAAc,CAAC,GAAD,CAAd;AACD,KAFD,MAEO;AACLA,MAAAA,cAAc,CAACM,cAAD,CAAd;AACD;AACF,GARD;;AAUA,QAAMC,yBAAyB,GAAG,MAAM;AACtCP,IAAAA,cAAc,CAACD,WAAW,GAAG,GAAf,CAAd;AACD,GAFD,CAlBkB,CAsBlB;;;AAEA,QAAMS,yBAAyB,GAAG,MAAM;AACtC,UAAMC,cAAc,GAAGR,WAAW,GAAG,EAArC;;AACA,QAAIQ,cAAc,GAAG,CAArB,EAAwB;AACtBP,MAAAA,cAAc,CAAC,CAAD,CAAd;AACD,KAFD,MAEO;AACLA,MAAAA,cAAc,CAACO,cAAD,CAAd;AACD;AACF,GAPD;;AASA,QAAMC,yBAAyB,GAAG,MAAM;AACtCR,IAAAA,cAAc,CAACD,WAAW,GAAG,EAAf,CAAd;AACD,GAFD;;AAIAP,EAAAA,WAAW,CACT,MAAM,CACJ;AACD,GAHQ,EAITS,cAAc,GAAG,IAAH,GAAU,IAJf,CAAX;;AAOA,WAASQ,SAAT,GAAqB;AACnBP,IAAAA,iBAAiB,CAAEQ,SAAD,IAAe,CAACA,SAAjB,CAAjB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,WAAW,EAAEb,WADf;AAEE,IAAA,+BAA+B,EAAEM,+BAFnC;AAGE,IAAA,yBAAyB,EAAEE,yBAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,KAAD;AACE,IAAA,WAAW,EAAEN,WADf;AAEE,IAAA,yBAAyB,EAAEO,yBAF7B;AAGE,IAAA,yBAAyB,EAAEE,yBAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,eAaE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,6BADZ;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,kBAAW,gBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,mBAAY,YAHd;AAIE,IAAA,KAAK,EAAC,sBAJR;AAKE,IAAA,OAAO,EAAEC,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AACE,IAAA,SAAS,EAAElB,UAAU,CAAC;AACpBoB,MAAAA,EAAE,EAAE,IADgB;AAEpB,uBAAiB,CAACV,cAFE;AAGpB,wBAAkBA;AAHE,KAAD,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CALF,eAqBE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,KAAK,EAAC,kBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CArBF,CADF,CADF,CAbF,eA8CE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEJ,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9CF,CADF;AAkDD;;AAED,eAAeD,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport Break from \"./Break\";\nimport Focus from \"./Focus\";\nimport TimeLeft from \"./TimeLeft\";\n\nfunction Pomodoro() {\n  const [focusLength, setFocusLength] = useState(1500);\n  const [breakLength, setBreakLength] = useState(300);\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n\n  //Focus Length Decrementation / Incrementation\n\n  const decrementFocusLengthByOneMinute = () => {\n    const newFocusLength = focusLength - 300;\n\n    if (newFocusLength < 300) {\n      setFocusLength(300);\n    } else {\n      setFocusLength(newFocusLength);\n    }\n  };\n\n  const incrementFocusLengthByOne = () => {\n    setFocusLength(focusLength + 300);\n  };\n\n  // Break Length Decrementation / Incrementation\n\n  const decrementBreakLengthByOne = () => {\n    const newBreakLength = breakLength - 60;\n    if (newBreakLength < 0) {\n      setBreakLength(0);\n    } else {\n      setBreakLength(newBreakLength);\n    }\n  };\n\n  const incrementBreakLengthByOne = () => {\n    setBreakLength(breakLength + 60);\n  };\n\n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <Focus\n          focusLength={focusLength}\n          decrementFocusLengthByOneMinute={decrementFocusLengthByOneMinute}\n          incrementFocusLengthByOne={incrementFocusLengthByOne}\n        />\n        <Break\n          breakLength={breakLength}\n          decrementBreakLengthByOne={decrementBreakLengthByOne}\n          incrementBreakLengthByOne={incrementBreakLengthByOne}\n        />\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <TimeLeft timeleft={focusLength} />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}